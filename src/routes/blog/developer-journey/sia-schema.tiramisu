title { To the next level: A Developer's Guide to Sia Schema }

Now we are going to talk about the bold { high-level API } of Sia.

image {
    src = /images/blog/dev-journey/sia-next-level.png,
    alt = Sonic saying welcome to the next level,
    caption = ""Sia the "Sonic", get it?""
}

We know from a previous link { article, to =
/blog/developer-journey/sia-the-sonic } about the low-level API of Sia that in
order to serialize and deserialize your data, you have to add your fields by
their type and length, and deserialize them in the same order.

code {
    language = typescript,
    content = """
    const payload = sia
        .addAscii(person.name ?? '')
        .addUInt8(person.age ?? 0)
        .toUint8ArrayReference();

    const desia = new Sia(payload);
    const deserialized: Person = {
        name: desia.readAscii(),
        age: desia.readUInt8()
    };
    """
}

While that was simple, the high-level API is even better!
